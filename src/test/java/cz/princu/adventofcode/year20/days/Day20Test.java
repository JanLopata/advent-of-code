package cz.princu.adventofcode.year20.days;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

class Day20Test {

    Day20 tested = new Day20();

    @Test
    void testPart1_simpleData() {

        String testData = "Tile 2311:\n" +
                "..##.#..#.\n" +
                "##..#.....\n" +
                "#...##..#.\n" +
                "####.#...#\n" +
                "##.##.###.\n" +
                "##...#.###\n" +
                ".#.#.#..##\n" +
                "..#....#..\n" +
                "###...#.#.\n" +
                "..###..###\n" +
                "\n" +
                "Tile 1951:\n" +
                "#.##...##.\n" +
                "#.####...#\n" +
                ".....#..##\n" +
                "#...######\n" +
                ".##.#....#\n" +
                ".###.#####\n" +
                "###.##.##.\n" +
                ".###....#.\n" +
                "..#.#..#.#\n" +
                "#...##.#..\n" +
                "\n" +
                "Tile 1171:\n" +
                "####...##.\n" +
                "#..##.#..#\n" +
                "##.#..#.#.\n" +
                ".###.####.\n" +
                "..###.####\n" +
                ".##....##.\n" +
                ".#...####.\n" +
                "#.##.####.\n" +
                "####..#...\n" +
                ".....##...\n" +
                "\n" +
                "Tile 1427:\n" +
                "###.##.#..\n" +
                ".#..#.##..\n" +
                ".#.##.#..#\n" +
                "#.#.#.##.#\n" +
                "....#...##\n" +
                "...##..##.\n" +
                "...#.#####\n" +
                ".#.####.#.\n" +
                "..#..###.#\n" +
                "..##.#..#.\n" +
                "\n" +
                "Tile 1489:\n" +
                "##.#.#....\n" +
                "..##...#..\n" +
                ".##..##...\n" +
                "..#...#...\n" +
                "#####...#.\n" +
                "#..#.#.#.#\n" +
                "...#.#.#..\n" +
                "##.#...##.\n" +
                "..##.##.##\n" +
                "###.##.#..\n" +
                "\n" +
                "Tile 2473:\n" +
                "#....####.\n" +
                "#..#.##...\n" +
                "#.##..#...\n" +
                "######.#.#\n" +
                ".#...#.#.#\n" +
                ".#########\n" +
                ".###.#..#.\n" +
                "########.#\n" +
                "##...##.#.\n" +
                "..###.#.#.\n" +
                "\n" +
                "Tile 2971:\n" +
                "..#.#....#\n" +
                "#...###...\n" +
                "#.#.###...\n" +
                "##.##..#..\n" +
                ".#####..##\n" +
                ".#..####.#\n" +
                "#..#.#..#.\n" +
                "..####.###\n" +
                "..#.#.###.\n" +
                "...#.#.#.#\n" +
                "\n" +
                "Tile 2729:\n" +
                "...#.#.#.#\n" +
                "####.#....\n" +
                "..#.#.....\n" +
                "....#..#.#\n" +
                ".##..##.#.\n" +
                ".#.####...\n" +
                "####.#.#..\n" +
                "##.####...\n" +
                "##..#.##..\n" +
                "#.##...##.\n" +
                "\n" +
                "Tile 3079:\n" +
                "#.#.#####.\n" +
                ".#..######\n" +
                "..#.......\n" +
                "######....\n" +
                "####.#..#.\n" +
                ".#...#.##.\n" +
                "#.#####.##\n" +
                "..#.###...\n" +
                "..#.......\n" +
                "..#.###...";

        Assertions.assertEquals(20899048083289L, tested.part1(testData));

    }

    @Test
    void testPart1_easyData() {

        String testData = "Tile 1:\n" +
                "101\n" +
                "001\n" +
                "221\n" +
                "\n" +
                "Tile 2:\n" +
                "111\n" +
                "400\n" +
                "402\n" +
                "\n" +
                "Tile 3:\n" +
                "303\n" +
                "300\n" +
                "122\n" +
                "\n" +
                "Tile 4:\n" +
                "404\n" +
                "400\n" +
                "133";

        Assertions.assertEquals(24L, tested.part1(testData));

    }


    @Test
    void testPart1_easyData2() {

        String testData = "" +
                "Tile 1:\n" +
                "001\n" +
                "100\n" +
                "020\n" +
                "\n" +
                "Tile 2:\n" +
                "X30\n" +
                "402\n" +
                "020\n" +
                "\n" +
                "Tile 3:\n" +
                "300\n" +
                "005\n" +
                "04X\n" +
                "\n" +
                "Tile 4:\n" +
                "010\n" +
                "407\n" +
                "060\n" +
                "\n" +
                "Tile 5:\n" +
                "03X\n" +
                "709\n" +
                "080\n" +
                "\n" +
                "Tile 6:\n" +
                "X50\n" +
                "906\n" +
                "0A0\n" +
                "\n" +
                "Tile 7:\n" +
                "060\n" +
                "00B\n" +
                "700\n" +
                "\n" +
                "Tile 8:\n" +
                "080\n" +
                "C0B\n" +
                "080\n" +
                "\n" +
                "Tile 9:\n" +
                "0C0\n" +
                "00A\n" +
                "900";

        Assertions.assertEquals((long) 3 * 7 * 9, tested.part1(testData));

    }

    @Test
    void testPart2_one_simpleData() {

        String testData = "";

        Assertions.assertEquals(0L, tested.part2(testData));

    }

}